# Generated by Django 5.2 on 2025-05-05 15:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlerResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=255, verbose_name='页面URL')),
                ('html_source', models.TextField(blank=True, null=True, verbose_name='HTML源码')),
                ('headers', models.JSONField(default=dict, verbose_name='HTTP头信息')),
                ('resources', models.JSONField(default=list, verbose_name='静态资源URL列表')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawler_results', to='tasks.crawlertask', verbose_name='关联任务')),
            ],
            options={
                'verbose_name': '爬虫结果',
                'verbose_name_plural': '爬虫结果',
                'unique_together': {('task', 'url')},
            },
        ),
        migrations.CreateModel(
            name='IdentifiedComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=255, verbose_name='组件名称')),
                ('keyword', models.CharField(max_length=255, verbose_name='匹配关键词')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='results.crawlerresult', verbose_name='关联爬虫结果')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identified_components', to='tasks.crawlertask', verbose_name='关联任务')),
            ],
            options={
                'verbose_name': '识别组件',
                'verbose_name_plural': '识别组件',
                'unique_together': {('result', 'component')},
            },
        ),
    ]
